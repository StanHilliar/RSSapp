'use strict';


// Group authorization helpers
var hasAuthorization = function(req, res, next) 
{
  /*
  if (!req.user.isAdmin && !req.group.user._id.equals(req.user._id)) 
  {
    return res.status(401).send('User is not authorized');
  }*/
  next();
};
/* jshint -W098 */
// The Package is past automatically as first parameter
module.exports = function(Groups, app, auth, database) 
{

  var groups = require('../controllers/groups')(Groups);
   app.route('/api/groups')
    .get(groups.all)
    .post(auth.requiresLogin, groups.create);
    
   app.route('/api/groups/:groupId')
    .get(auth.isMongoId, groups.show)
    .put(auth.isMongoId, auth.requiresLogin, hasAuthorization, groups.update)
    .delete(auth.isMongoId, auth.requiresLogin, hasAuthorization, groups.destroy);

  // Finish with setting up the groupId param
  app.param('groupId', groups.group);
  app.get('/api/groups/example/anyone', function(req, res, next) {
    res.send('Anyone can access this');
  });

  app.get('/api/groups/example/auth', auth.requiresLogin, function(req, res, next) {
    res.send('Only authenticated users can access this');
  });

  app.get('/api/groups/example/admin', auth.requiresAdmin, function(req, res, next) {
    res.send('Only users with Admin role can access this');
  });

  app.get('/api/groups/example/render', function(req, res, next) {
    Groups.render('index', {
      package: 'groups'
    }, function(err, html) {
      //Rendering a view from the Package server/views
      res.send(html);
    });
  });
};
